@namespace BlazorCharts
@inherits ElementAxes<TData>
@typeparam TData

@if (Chart.IsInit)
{
    <g class="bc-axes-y" transform="translate(@Rect.LT.ToPoint())">

        <line x1="@Rect.W" y1="@Rect.H" x2="@Rect.W" y2="0" stroke="rgb(64 64 64)" stroke-width="1" />

        @{
            //计算步进
            int step = Step ?? 0;
            if (step == 0)
            {
                if (Math.Abs(AxesYMax) < 10)
                {
                    step = 1;
                }
                else
                {
                    step = (int)Math.Pow(10, (AxesYMax.ToString().Length - 2)) * 5;
                }

            }

            var nowValue = 0;//暂时先不考虑负数问题

            }

        @while(nowValue<=AxesYMax)
        {
            var h = (int)(Rect.H - (double)Rect.H  * (nowValue/ AxesYMax));


            <line x1="@(Rect.W-5)" y1="@h" x2="@(Rect.W)" y2="@h" stroke="rgb(64 64 64)" stroke-width="1"></line>
            <text>
                <text font-size="@FontSize" fill="#767676" x="@Rect.W" y="@(h)" transform="translate(-10,@(FontSize/3))" text-anchor="@TextAnchor.End.ToDescription()">@nowValue</text>
            </text>

            <line x1="@(Rect.W)" y1="@h" x2="@(Rect.W+AxisGroup.AxesX.Rect.W)" y2="@h" stroke="rgb(64 64 64 / 0.3)" stroke-width="1"></line>

            nowValue += step;
        }

    </g>


    @*<polyline points="@Rect.ToPoints()" style="fill:rgb(0 255 0 / 0.10);" />*@
}
